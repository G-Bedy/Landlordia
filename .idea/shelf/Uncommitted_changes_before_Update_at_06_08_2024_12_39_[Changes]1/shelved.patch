Index: landlordia/realestate/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.core.exceptions import ValidationError\r\nfrom django.db import models\r\nfrom django.contrib.auth.models import User\r\n\r\n\r\nclass Owner(models.Model):\r\n    \"\"\"\r\n    Модель Owner, создание собственника недвижимости.\r\n\r\n    Атрибуты:\r\n        user (OneToOneField): Связь один-к-одному с моделью User.\r\n        phone_number (CharField): Номер телефона владельца (необязательное поле).\r\n        address (CharField): Адрес владельца (необязательное поле).\r\n    \"\"\"\r\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\r\n    phone_number = models.CharField(max_length=15, blank=True)\r\n    address = models.CharField(max_length=255, blank=True)\r\n\r\n    def __str__(self):\r\n        return self.user.username\r\n\r\n\r\nclass Property(models.Model):\r\n    \"\"\"\r\n    Модель Property, создание объекта недвижимости, принадлежащей собственнику.\r\n\r\n    Атрибуты:\r\n        owner (ForeignKey): Владелец недвижимости, связь с моделью Owner.\r\n        address (CharField): Адрес недвижимости.\r\n        property_type (CharField): Тип недвижимости (квартира, дом, коммерческая недвижимость, земельный участок).\r\n        description (TextField): Описание недвижимости (необязательное поле).\r\n        purchase_date (DateField): Дата покупки недвижимости.\r\n        price (DecimalField): Стоимость аренды.\r\n        price_period (CharField): Период аренды (часы, сутки, месяц).\r\n        rental_type (CharField): Признак сдачи недвижимости (почасовая, посуточная, длительная аренда).\r\n        minimum_rental_value (IntegerField): Значение минимального периода сдачи.\r\n        minimum_rental_unit (CharField): Единица измерения минимального периода сдачи (часы, дни, месяцы).\r\n    \"\"\"\r\n    PROPERTY_TYPE_CHOICES = [\r\n        ('Apartment', 'Квартира'),\r\n        ('House', 'Дом'),\r\n        ('Commercial', 'Коммерческая недвижимость'),\r\n        ('Land', 'Земельный участок')\r\n    ]\r\n\r\n    PERIOD_CHOICES = [\r\n        ('Hour', 'в час'),\r\n        ('Day', 'в сутки'),\r\n        ('Month', 'в месяц')\r\n    ]\r\n\r\n    RENTAL_TYPE_CHOICES = [\r\n        ('Hourly', 'Почасовая аренда'),\r\n        ('Daily', 'Посуточная аренда'),\r\n        ('LongTerm', 'Длительная аренда')\r\n    ]\r\n\r\n    owner = models.ForeignKey(Owner, on_delete=models.CASCADE)\r\n    address = models.CharField(max_length=255)\r\n    property_type = models.CharField(max_length=20, choices=PROPERTY_TYPE_CHOICES)\r\n    description = models.TextField(blank=True)\r\n    rental_type = models.CharField(max_length=20, choices=RENTAL_TYPE_CHOICES,\r\n                                   help_text=(\"Тип ренты (почасовая, посуточная, длительная аренда)\"))\r\n    price = models.DecimalField(max_digits=10, decimal_places=2, help_text=(\"Стоимость аренды\"))\r\n    price_period = models.CharField(max_length=20, choices=PERIOD_CHOICES,\r\n                                    help_text=(\"Стоимость за период: в час, в сутки или в месяц\"))\r\n    minimum_rental_value = models.IntegerField(help_text=(\"Минимальный период сдачи\"))\r\n    minimum_rental_unit = models.CharField(max_length=5,\r\n                                           choices=PERIOD_CHOICES,\r\n                                           help_text=(\r\n                                               \"Единица измерения минимального периода сдачи (часы, дни, месяцы)\")\r\n                                           )\r\n\r\n    def __str__(self):\r\n        return f\"{self.owner} - {self.property_type} - {self.address}\"\r\n\r\n\r\nclass Tenant(models.Model):\r\n    \"\"\"\r\n    Модель Tenant (Арендатор), создание объекта арендатора.\r\n\r\n    Атрибуты:\r\n        first_name (CharField): Имя арендатора.\r\n        last_name (CharField): Фамилия арендатора.\r\n        email (EmailField): Электронная почта арендатора.\r\n        phone_number (CharField): Номер телефона арендатора (необязательное поле).\r\n        address (CharField): Адрес арендатора (необязательное поле).\r\n    \"\"\"\r\n    first_name = models.CharField(max_length=50)\r\n    last_name = models.CharField(max_length=50)\r\n    email = models.EmailField()\r\n    phone_number = models.CharField(max_length=15, blank=True)\r\n    address = models.CharField(max_length=255, blank=True)\r\n\r\n    def __str__(self):\r\n        return f\"{self.first_name} {self.last_name}\"\r\n\r\n\r\nclass LeaseContract(models.Model):\r\n    \"\"\"\r\n    Модель LeaseContract, создание договора аренды недвижимости.\r\n\r\n    Атрибуты:\r\n        property (ForeignKey): Ссылка на арендуемую недвижимость.\r\n        tenant (ForeignKey): Ссылка на арендатора.\r\n        start_date (DateField): Дата начала аренды.\r\n        end_date (DateField): Дата окончания аренды.\r\n        rent_amount (DecimalField): Сумма аренды.\r\n        rent_period (CharField): Период аренды (часы, сутки, месяцы).\r\n        deposit_amount (DecimalField): Сумма депозита (необязательное поле).\r\n    \"\"\"\r\n    PERIOD_CHOICES = [\r\n        ('Hour', 'Час'),\r\n        ('Day', 'Сутки'),\r\n        ('Month', 'Месяц')\r\n    ]\r\n\r\n    property = models.ForeignKey(Property, on_delete=models.CASCADE, help_text=(\"Арендуемая недвижимость\"))\r\n    tenant = models.ForeignKey(Tenant, on_delete=models.CASCADE, help_text=(\"Арендатор\"))\r\n    start_date = models.DateField(help_text=(\"Дата начала аренды\"))\r\n    end_date = models.DateField(help_text=(\"Дата окончания аренды\"))\r\n    rent_amount = models.IntegerField(help_text=(\"Сумма аренды\"))\r\n    rent_period = models.CharField(max_length=20, choices=PERIOD_CHOICES, help_text=(\"Период аренды (часы, сутки, месяцы)\"))\r\n    deposit_amount = models.IntegerField(blank=True, null=True, help_text=(\"Сумма депозита (необязательное поле)\"))\r\n\r\n    def clean(self):\r\n        \"\"\"\r\n        Валидация дат начала и окончания аренды.\r\n        \"\"\"\r\n        if self.end_date < self.start_date:\r\n            raise ValidationError(\"Дата окончания аренды не может быть раньше даты начала аренды\")\r\n\r\n    def __str__(self):\r\n        return f\"Договор аренды недвижимости по адресу: {self.property.address} с {self.start_date} по {self.end_date}, {self.rent_amount} рублей за {self.rent_period}, арендатор {self.tenant.first_name}\"\r\n\r\n\r\nclass Payment(models.Model):\r\n    \"\"\"\r\n    Модель Payment, платежи по договору аренды.\r\n\r\n    Атрибуты:\r\n        lease (ForeignKey): Связь с моделью Lease, представляющая договор аренды, по которому осуществляется платеж.\r\n        amount (DecimalField): Сумма платежа.\r\n        payment_date (DateField): Дата совершения платежа.\r\n    \"\"\"\r\n    lease = models.ForeignKey(LeaseContract, on_delete=models.CASCADE)\r\n    amount = models.IntegerField()\r\n    payment_date = models.DateField()\r\n\r\n    def __str__(self):\r\n        return f\"Оплата в размере {self.amount} рублей {self.payment_date} по {self.lease}\"\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/landlordia/realestate/models.py b/landlordia/realestate/models.py
--- a/landlordia/realestate/models.py	
+++ b/landlordia/realestate/models.py	
@@ -6,15 +6,22 @@
 class Owner(models.Model):
     """
     Модель Owner, создание собственника недвижимости.
-
-    Атрибуты:
-        user (OneToOneField): Связь один-к-одному с моделью User.
-        phone_number (CharField): Номер телефона владельца (необязательное поле).
-        address (CharField): Адрес владельца (необязательное поле).
     """
-    user = models.OneToOneField(User, on_delete=models.CASCADE)
-    phone_number = models.CharField(max_length=15, blank=True)
-    address = models.CharField(max_length=255, blank=True)
+    user = models.OneToOneField(
+        User,
+        on_delete=models.CASCADE,
+        verbose_name='Пользователь'
+    )
+    phone_number = models.CharField(
+        max_length=15,
+        blank=True,
+        verbose_name='Номер телефона владельца'
+    )
+    address = models.CharField(
+        max_length=255,
+        blank=True,
+        verbose_name='Адрес владельца'
+    )
 
     def __str__(self):
         return self.user.username
@@ -23,18 +30,6 @@
 class Property(models.Model):
     """
     Модель Property, создание объекта недвижимости, принадлежащей собственнику.
-
-    Атрибуты:
-        owner (ForeignKey): Владелец недвижимости, связь с моделью Owner.
-        address (CharField): Адрес недвижимости.
-        property_type (CharField): Тип недвижимости (квартира, дом, коммерческая недвижимость, земельный участок).
-        description (TextField): Описание недвижимости (необязательное поле).
-        purchase_date (DateField): Дата покупки недвижимости.
-        price (DecimalField): Стоимость аренды.
-        price_period (CharField): Период аренды (часы, сутки, месяц).
-        rental_type (CharField): Признак сдачи недвижимости (почасовая, посуточная, длительная аренда).
-        minimum_rental_value (IntegerField): Значение минимального периода сдачи.
-        minimum_rental_unit (CharField): Единица измерения минимального периода сдачи (часы, дни, месяцы).
     """
     PROPERTY_TYPE_CHOICES = [
         ('Apartment', 'Квартира'),
@@ -55,21 +50,51 @@
         ('LongTerm', 'Длительная аренда')
     ]
 
-    owner = models.ForeignKey(Owner, on_delete=models.CASCADE)
-    address = models.CharField(max_length=255)
-    property_type = models.CharField(max_length=20, choices=PROPERTY_TYPE_CHOICES)
-    description = models.TextField(blank=True)
-    rental_type = models.CharField(max_length=20, choices=RENTAL_TYPE_CHOICES,
-                                   help_text=("Тип ренты (почасовая, посуточная, длительная аренда)"))
-    price = models.DecimalField(max_digits=10, decimal_places=2, help_text=("Стоимость аренды"))
-    price_period = models.CharField(max_length=20, choices=PERIOD_CHOICES,
-                                    help_text=("Стоимость за период: в час, в сутки или в месяц"))
-    minimum_rental_value = models.IntegerField(help_text=("Минимальный период сдачи"))
-    minimum_rental_unit = models.CharField(max_length=5,
-                                           choices=PERIOD_CHOICES,
-                                           help_text=(
-                                               "Единица измерения минимального периода сдачи (часы, дни, месяцы)")
-                                           )
+    owner = models.ForeignKey(
+        Owner,
+        on_delete=models.CASCADE,
+        verbose_name='Владелец недвижимости'
+    )
+    address = models.CharField(
+        max_length=255,
+        verbose_name='Адрес недвижимости'
+    )
+    property_type = models.CharField(
+        max_length=20,
+        choices=PROPERTY_TYPE_CHOICES,
+        verbose_name='Тип недвижимости'
+    )
+    description = models.TextField(
+        blank=True,
+        verbose_name='Описание недвижимости'
+    )
+    rental_type = models.CharField(
+        max_length=20,
+        choices=RENTAL_TYPE_CHOICES,
+        help_text="Тип ренты (почасовая, посуточная, длительная аренда)",
+        verbose_name='Тип ренты'
+    )
+    price = models.DecimalField(
+        max_digits=10,
+        decimal_places=2,
+        help_text="Стоимость аренды",
+        verbose_name='Стоимость аренды')
+    price_period = models.CharField(
+        max_length=20,
+        choices=PERIOD_CHOICES,
+        help_text="Стоимость за период: в час, в сутки или в месяц",
+        verbose_name='Стоимость за период'
+    )
+    minimum_rental_value = models.IntegerField(
+        help_text="Минимальный период сдачи",
+        verbose_name='Минимальный период сдачи'
+    )
+    minimum_rental_unit = models.CharField(
+        max_length=5,
+        choices=PERIOD_CHOICES,
+        help_text="Единица измерения минимального периода сдачи (часы, дни, месяцы)",
+        verbose_name='Единица измерения'
+    )
 
     def __str__(self):
         return f"{self.owner} - {self.property_type} - {self.address}"
@@ -78,19 +103,12 @@
 class Tenant(models.Model):
     """
     Модель Tenant (Арендатор), создание объекта арендатора.
-
-    Атрибуты:
-        first_name (CharField): Имя арендатора.
-        last_name (CharField): Фамилия арендатора.
-        email (EmailField): Электронная почта арендатора.
-        phone_number (CharField): Номер телефона арендатора (необязательное поле).
-        address (CharField): Адрес арендатора (необязательное поле).
     """
-    first_name = models.CharField(max_length=50)
-    last_name = models.CharField(max_length=50)
-    email = models.EmailField()
-    phone_number = models.CharField(max_length=15, blank=True)
-    address = models.CharField(max_length=255, blank=True)
+    first_name = models.CharField(max_length=50, verbose_name='Имя арендатора')
+    last_name = models.CharField(max_length=50, verbose_name='Фамилия арендатора')
+    email = models.EmailField(verbose_name='Электронная почта арендатора')
+    phone_number = models.CharField(max_length=15, blank=True, verbose_name='Номер телефона арендатора')
+    address = models.CharField(max_length=255, blank=True, verbose_name='Адрес арендатора')
 
     def __str__(self):
         return f"{self.first_name} {self.last_name}"
@@ -99,15 +117,6 @@
 class LeaseContract(models.Model):
     """
     Модель LeaseContract, создание договора аренды недвижимости.
-
-    Атрибуты:
-        property (ForeignKey): Ссылка на арендуемую недвижимость.
-        tenant (ForeignKey): Ссылка на арендатора.
-        start_date (DateField): Дата начала аренды.
-        end_date (DateField): Дата окончания аренды.
-        rent_amount (DecimalField): Сумма аренды.
-        rent_period (CharField): Период аренды (часы, сутки, месяцы).
-        deposit_amount (DecimalField): Сумма депозита (необязательное поле).
     """
     PERIOD_CHOICES = [
         ('Hour', 'Час'),
@@ -115,13 +124,42 @@
         ('Month', 'Месяц')
     ]
 
-    property = models.ForeignKey(Property, on_delete=models.CASCADE, help_text=("Арендуемая недвижимость"))
-    tenant = models.ForeignKey(Tenant, on_delete=models.CASCADE, help_text=("Арендатор"))
-    start_date = models.DateField(help_text=("Дата начала аренды"))
-    end_date = models.DateField(help_text=("Дата окончания аренды"))
-    rent_amount = models.IntegerField(help_text=("Сумма аренды"))
-    rent_period = models.CharField(max_length=20, choices=PERIOD_CHOICES, help_text=("Период аренды (часы, сутки, месяцы)"))
-    deposit_amount = models.IntegerField(blank=True, null=True, help_text=("Сумма депозита (необязательное поле)"))
+    property = models.ForeignKey(
+        Property,
+        on_delete=models.CASCADE,
+        help_text="Арендуемая недвижимость",
+        verbose_name='Ссылка на арендуемую недвижимость'
+    )
+    tenant = models.ForeignKey(
+        Tenant,
+        on_delete=models.CASCADE,
+        help_text="Арендатор",
+        verbose_name='Ссылка на арендатора'
+    )
+    start_date = models.DateField(
+        help_text="Дата начала аренды",
+        verbose_name='Дата начала аренды'
+    )
+    end_date = models.DateField(
+        help_text="Дата окончания аренды",
+        verbose_name='Дата окончания аренды'
+    )
+    rent_amount = models.IntegerField(
+        help_text="Сумма аренды",
+        verbose_name='Сумма аренды'
+    )
+    rent_period = models.CharField(
+        max_length=20,
+        choices=PERIOD_CHOICES,
+        help_text=("Период аренды (часы, сутки, месяцы)"),
+        verbose_name='Период аренды'
+    )
+    deposit_amount = models.IntegerField(
+        blank=True,
+        null=True,
+        help_text=("Сумма депозита (необязательное поле)"),
+        verbose_name='Сумма депозита'
+    )
 
     def clean(self):
         """
@@ -137,15 +175,14 @@
 class Payment(models.Model):
     """
     Модель Payment, платежи по договору аренды.
-
-    Атрибуты:
-        lease (ForeignKey): Связь с моделью Lease, представляющая договор аренды, по которому осуществляется платеж.
-        amount (DecimalField): Сумма платежа.
-        payment_date (DateField): Дата совершения платежа.
     """
-    lease = models.ForeignKey(LeaseContract, on_delete=models.CASCADE)
-    amount = models.IntegerField()
-    payment_date = models.DateField()
+    lease = models.ForeignKey(
+        LeaseContract,
+        on_delete=models.CASCADE,
+        verbose_name='Ссылка на договор аренды'
+    )
+    amount = models.IntegerField(verbose_name='Сумма платежа')
+    payment_date = models.DateField(verbose_name='Дата совершения платежа')
 
     def __str__(self):
         return f"Оплата в размере {self.amount} рублей {self.payment_date} по {self.lease}"
